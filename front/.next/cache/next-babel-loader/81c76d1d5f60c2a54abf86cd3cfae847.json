{"ast":null,"code":"var _jsxFileName = \"/Users/seolranlee/study/react-nodebird/front/components/PostCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, ButtonGroup, Button } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user); // const id = me && me.id와 같은 문장\n\n  const id = me === null || me === void 0 ? void 0 : me.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 34\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"commnet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [( /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            tyep: \"danger\",\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\nPostCard.propTypes = {\n  // shape: object 타입을 더 자세히 명시해두고 싶을 때 쓴다.\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    // arrayOf(PropTypes.object): 객체들의 배열이라는 뜻\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/seolranlee/study/react-nodebird/front/components/PostCard.js"],"names":["React","PropTypes","Card","Popover","ButtonGroup","Button","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","useSelector","PostCard","post","me","state","user","id","Images","propTypes","shape","number","object","content","string","createdAt","Comments","arrayOf","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,WAAxB,EAAqCC,MAArC,QAAmD,MAAnD;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,eAA1C,EAA2DC,eAA3D,QAAkF,mBAAlF;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAASH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B,CAD6B,CAE7B;;AACA,QAAMC,EAAE,GAAGH,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEG,EAAf;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEL,IAAI,CAACK;AAAzB;AAAA;AAAA;AAAA;AAAA,cAD3B;AAEE,MAAA,OAAO,EAAE,cACP,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cADO,eAEP,QAAC,aAAD,MAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,cAFO,eAGP,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cAHO,eAIP,QAAC,OAAD;AAAoB,QAAA,OAAO,eACzB,QAAC,WAAD;AAAA,sBAEI,sBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACA,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,gBAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA,+BASE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AATF,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,cAJO,CAFX;AAAA,8BAmBE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cApBF,eAqBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAxBF,eAyBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAjCD;;AAmCAN,QAAQ,CAACO,SAAT,GAAqB;AACnB;AACAN,EAAAA,IAAI,EAAEX,SAAS,CAACkB,KAAV,CAAgB;AACpBH,IAAAA,EAAE,EAAEf,SAAS,CAACmB,MADM;AAEpBL,IAAAA,IAAI,EAAEd,SAAS,CAACoB,MAFI;AAGpBC,IAAAA,OAAO,EAAErB,SAAS,CAACsB,MAHC;AAIpBC,IAAAA,SAAS,EAAEvB,SAAS,CAACoB,MAJD;AAKpB;AACAI,IAAAA,QAAQ,EAAExB,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAACoB,MAA5B,CANU;AAOpBJ,IAAAA,MAAM,EAAEhB,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAACoB,MAA5B;AAPY,GAAhB,EAQHM;AAVgB,CAArB;AAYA,eAAehB,QAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Popover, ButtonGroup, Button } from 'antd'\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons'\nimport { useSelector } from 'react-redux'\n\nconst PostCard = ({ post }) => {\n  const { me } = useSelector((state) => state.user)\n  // const id = me && me.id와 같은 문장\n  const id = me?.id\n  return (\n    <div>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images}/>}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          <HeartOutlined key=\"heart\" />,\n          <MessageOutlined key=\"commnet\" />,\n          <Popover key=\"more\" content={(\n            <ButtonGroup>\n              {\n                <Button>수정</Button>,\n                <Button tyep=\"danger\">삭제</Button>\n              }\n              <Button>신고</Button>\n            </ButtonGroup>\n          )}>\n            <EllipsisOutlined />\n          </Popover>\n        ]}\n      >\n        <Image />\n        <Content />\n        <Buttons></Buttons>\n      </Card>\n      <CommentForm />\n      <Comments />\n    </div>\n  )\n}\n\nPostCard.propTypes = {\n  // shape: object 타입을 더 자세히 명시해두고 싶을 때 쓴다.\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    // arrayOf(PropTypes.object): 객체들의 배열이라는 뜻\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired\n}\nexport default PostCard"]},"metadata":{},"sourceType":"module"}