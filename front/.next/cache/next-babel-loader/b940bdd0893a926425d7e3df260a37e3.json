{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/seolranlee/study/react-nodebird/front/components/ImagesZoom/index.js\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { CloseOutlined } from '@ant-design/icons'; // ``: 함수를 호출하는 자바스크립트 문법(Tagged templates literals)\n// https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Template_literals#tagged_templates\n// func()\n// func``\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Overlay = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  z-index: 5000;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n\"])));\n_c = Overlay;\nvar Header = styled.header(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  header: 44px;\\n  background: white;\\n  position: relative;\\n  padding: 0;\\n  text-align: center;\\n\\n  // \\uBCC0\\uC218\\uBA85 \\uC9D3\\uB294 \\uACE0\\uBBFC\\uC744 \\uB35C \\uD560\\uC218 \\uC788\\uB2E4.\\n  & h1 {\\n    margin: 0;\\n    font-size: 17px;\\n    color: #333;\\n    line-height: 44px;\\n  }\\n\"]))); // antd 컴포넌트를 스타일링 할거라 별도로 뺌\n\n_c2 = Header;\nvar CloseBtn = styled(CloseOutlined)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  padding: 15px;\\n  line-height: 14px;\\n  cursor: pointer;\\n\"])));\n_c3 = CloseBtn;\nvar SlickWrapper = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  height: calc(100% - 44px);\\n  background: #090909;\\n\"])));\n_c4 = SlickWrapper;\nvar ImgWrapper = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  padding: 32px;\\n  text-align: center;\\n\\n  & img {\\n    margin: 0 auto;\\n    max-height: 750px;\\n  }\\n\"])));\n_c5 = ImgWrapper;\nvar Indicator = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  text-align: center;\\n\\n  & > div {\\n    width: 75px;\\n    height: 30px;\\n    line-height: 30px;\\n    border-radius: 15px;\\n    background: #313131;\\n    display: inline-block;\\n    text-align: center;\\n    color: white;\\n    font-size: 15px;\\n  }\\n\"]))); // 스타일 오버라이딩을 위한\n\n_c6 = Indicator;\nvar Global = createGlobalStyle(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  .slick-slide {\\n    display: inline-block;\\n  }\\n  /* position: fixed\\uC640 transform\\uC774 \\uAC19\\uC774 \\uC4F0\\uC77C \\uB54C\\uC758 \\uBE0C\\uB77C\\uC6B0\\uC800 bug */\\n  .ant-card-cover {\\n    transform: none !important;\\n  }\\n\"])));\n_c7 = Global;\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  _s();\n\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      currentSlide = _useState[0],\n      setCurrentSlide = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(Overlay, {\n    children: [/*#__PURE__*/_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CloseBtn, {\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(SlickWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Slick, {\n          initialSlide: 0,\n          afterChange: function afterChange(slide) {\n            return setCurrentSlide(slide);\n          },\n          infinite: true,\n          arrows: false // 한번에 하나씩만 보이고 하나씩만 넘길 수 있게\n          ,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          children: images.map(function (v) {\n            return /*#__PURE__*/_jsxDEV(ImgWrapper, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: v.src,\n                alt: v.src\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, _this)\n            }, v.src, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Indicator, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [currentSlide + 1, ' ', \"/\", images.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ImagesZoom, \"VQw0KpRgltXDNPWBgmV3GhZXdQE=\");\n\n_c8 = ImagesZoom;\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Overlay\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"CloseBtn\");\n$RefreshReg$(_c4, \"SlickWrapper\");\n$RefreshReg$(_c5, \"ImgWrapper\");\n$RefreshReg$(_c6, \"Indicator\");\n$RefreshReg$(_c7, \"Global\");\n$RefreshReg$(_c8, \"ImagesZoom\");","map":{"version":3,"sources":["/Users/seolranlee/study/react-nodebird/front/components/ImagesZoom/index.js"],"names":["React","useState","PropTypes","Slick","styled","createGlobalStyle","CloseOutlined","Overlay","div","Header","header","CloseBtn","SlickWrapper","ImgWrapper","Indicator","Global","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","length","propTypes","arrayOf","object","isRequired","func"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,SAASC,aAAT,QAA8B,mBAA9B,C,CAGA;AACA;AACA;AACA;;;AACA,IAAMC,OAAO,GAAGH,MAAM,CAACI,GAAV,+JAAb;KAAMD,O;AASN,IAAME,MAAM,GAAGL,MAAM,CAACM,MAAV,yWAAZ,C,CAgBA;;MAhBMD,M;AAiBN,IAAME,QAAQ,GAAGP,MAAM,CAACE,aAAD,CAAT,oLAAd;MAAMK,Q;AAQN,IAAMC,YAAY,GAAGR,MAAM,CAACI,GAAV,+HAAlB;MAAMI,Y;AAKN,IAAMC,UAAU,GAAGT,MAAM,CAACI,GAAV,iLAAhB;MAAMK,U;AAUN,IAAMC,SAAS,GAAGV,MAAM,CAACI,GAAV,mUAAf,C,CAgBA;;MAhBMM,S;AAiBN,IAAMC,MAAM,GAAGV,iBAAH,0SAAZ;MAAMU,M;;AAUN,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA;;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC1C,kBAAwCjB,QAAQ,CAAC,CAAD,CAAhD;AAAA,MAAOkB,YAAP;AAAA,MAAqBC,eAArB;;AACA,sBACE,QAAC,OAAD;AAAA,4BAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEF,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAOE,QAAC,YAAD;AAAA,6BACE;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,YAAY,EAAE,CADhB;AAEE,UAAA,WAAW,EAAE,qBAACG,KAAD;AAAA,mBAAWD,eAAe,CAACC,KAAD,CAA1B;AAAA,WAFf;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,MAAM,EAAE,KAJV,CAKE;AALF;AAME,UAAA,YAAY,EAAE,CANhB;AAOE,UAAA,cAAc,EAAE,CAPlB;AAAA,oBASGJ,MAAM,CAACK,GAAP,CAAW,UAACC,CAAD;AAAA,gCACV,QAAC,UAAD;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAEA,CAAC,CAACC,GAAZ;AAAiB,gBAAA,GAAG,EAAED,CAAC,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF,eAAiBD,CAAC,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA,qBADU;AAAA,WAAX;AATH;AAAA;AAAA;AAAA;AAAA,iBADF,eAgBE,QAAC,SAAD;AAAA,iCACE;AAAA,uBACGL,YAAY,GAAG,CADlB,EAEG,GAFH,OAIGF,MAAM,CAACQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAqCD,CAvCD;;GAAMT,U;;MAAAA,U;AAyCNA,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,MAAM,EAAEf,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAAC0B,MAA5B,EAAoCC,UADvB;AAErBX,EAAAA,OAAO,EAAEhB,SAAS,CAAC4B,IAAV,CAAeD;AAFH,CAAvB;AAKA,eAAeb,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Slick from 'react-slick'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport { CloseOutlined } from '@ant-design/icons'\n\n\n// ``: 함수를 호출하는 자바스크립트 문법(Tagged templates literals)\n// https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Template_literals#tagged_templates\n// func()\n// func``\nconst Overlay = styled.div`\n  position: fixed;\n  z-index: 5000;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`\n\nconst Header = styled.header`\n  header: 44px;\n  background: white;\n  position: relative;\n  padding: 0;\n  text-align: center;\n\n  // 변수명 짓는 고민을 덜 할수 있다.\n  & h1 {\n    margin: 0;\n    font-size: 17px;\n    color: #333;\n    line-height: 44px;\n  }\n`\n\n// antd 컴포넌트를 스타일링 할거라 별도로 뺌\nconst CloseBtn = styled(CloseOutlined)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 15px;\n  line-height: 14px;\n  cursor: pointer;\n`\nconst SlickWrapper = styled.div`\n  height: calc(100% - 44px);\n  background: #090909;\n`\n\nconst ImgWrapper = styled.div`\n  padding: 32px;\n  text-align: center;\n\n  & img {\n    margin: 0 auto;\n    max-height: 750px;\n  }\n`\n\nconst Indicator = styled.div`\n  text-align: center;\n\n  & > div {\n    width: 75px;\n    height: 30px;\n    line-height: 30px;\n    border-radius: 15px;\n    background: #313131;\n    display: inline-block;\n    text-align: center;\n    color: white;\n    font-size: 15px;\n  }\n`\n\n// 스타일 오버라이딩을 위한\nconst Global = createGlobalStyle`\n  .slick-slide {\n    display: inline-block;\n  }\n  /* position: fixed와 transform이 같이 쓰일 때의 브라우저 bug */\n  .ant-card-cover {\n    transform: none !important;\n  }\n`\n\nconst ImagesZoom = ({ images, onClose }) => {\n  const [currentSlide, setCurrentSlide] = useState(0)\n  return (\n    <Overlay>\n      {/* <Global/> 아무데나 넣어도 됨 */}\n      <Global />\n      <Header>\n        <h1>상세 이미지</h1>\n        <CloseBtn onClick={onClose}>X</CloseBtn>\n      </Header>\n      <SlickWrapper>\n        <div>\n          <Slick\n            initialSlide={0}\n            afterChange={(slide) => setCurrentSlide(slide)}\n            infinite\n            arrows={false}\n            // 한번에 하나씩만 보이고 하나씩만 넘길 수 있게\n            slidesToShow={1}\n            slidesToScroll={1}\n          >\n            {images.map((v) => (\n              <ImgWrapper key={v.src}>\n                <img src={v.src} alt={v.src} />\n              </ImgWrapper>\n            ))}\n          </Slick>\n          <Indicator>\n            <div>\n              {currentSlide + 1}\n              {' '}\n              /\n              {images.length}\n            </div>\n          </Indicator>\n        </div>\n      </SlickWrapper>\n    </Overlay>\n  )\n}\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n}\n\nexport default ImagesZoom"]},"metadata":{},"sourceType":"module"}