{"ast":null,"code":"import { all, fork, call, put, takeLatest, delay } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME } from \"../reducers/user\"; // addPost\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    }); // ADD_POST_SUCCESS 후 \n\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n} // addComment\n\n\nfunction addCommentAPI(data) {\n  return axios.Comment('/api/post/${data.postId}/comment', data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPosts() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPosts), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/seolranlee/study/react-nodebird/front/sagas/post.js"],"names":["all","fork","call","put","takeLatest","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","addPostAPI","data","post","addPost","action","type","err","error","response","addCommentAPI","Comment","addComment","watchAddPosts","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,KAA3C,QAAwD,0BAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EACoBC,gBADpB,EACsCC,gBADtC,EAEEC,mBAFF,EAEuBC,mBAFvB,EAE4CC,mBAF5C,QAGO,kBAHP;AAIA,SAASC,cAAT,QAA+B,kBAA/B,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOT,KAAK,CAACU,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMb,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEX,gBADE;AAERO,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT,CAHE,CAOF;;AACA,UAAMZ,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEN,cADE;AAERE,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAZD,CAYE,OAAOK,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEV,gBADE;AAERY,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFZ,KAAD,CAAT;AAID;AACF,C,CAED;;;AACA,SAASQ,aAAT,CAAuBR,IAAvB,EAA6B;AAC3B,SAAOT,KAAK,CAACkB,OAAN,CAAc,kCAAd,EAAkDT,IAAlD,CAAP;AACD;;AAED,UAAUU,UAAV,CAAqBP,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMb,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAER,mBADE;AAERI,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEP,mBADE;AAERS,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUW,aAAV,GAA0B;AACxB,QAAMtB,UAAU,CAACG,gBAAD,EAAmBU,OAAnB,CAAhB;AACD;;AAED,UAAUU,eAAV,GAA4B;AAC1B,QAAMvB,UAAU,CAACM,mBAAD,EAAsBe,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAM5B,GAAG,CAAC,CACRC,IAAI,CAACyB,aAAD,CADI,EAERzB,IAAI,CAAC0B,eAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, fork, call, put, takeLatest, delay } from \"@redux-saga/core/effects\";\nimport axios from 'axios'\nimport { \n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE \n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\n\n// addPost\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data)\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000)\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    })\n    // ADD_POST_SUCCESS 후 \n    yield put({\n      type: ADD_POST_TO_ME,\n      data: action.data\n    })\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    })\n  }\n}\n\n// addComment\nfunction addCommentAPI(data) {\n  return axios.Comment('/api/post/${data.postId}/comment', data)\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data)\n    yield delay(1000)\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    })\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    })\n  }\n}\n\nfunction* watchAddPosts() {\n  yield takeLatest(ADD_POST_REQUEST, addPost)\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment)\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPosts),\n    fork(watchAddComment)\n  ])\n}"]},"metadata":{},"sourceType":"module"}