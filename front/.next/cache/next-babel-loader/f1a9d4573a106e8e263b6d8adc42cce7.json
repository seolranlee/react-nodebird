{"ast":null,"code":"// configureStore.js\nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore() {\n  var enhancer = false ? compose(applyMiddleware([])) : compose(applyMiddleware([]));\n  var store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'seolseol_2'\n  });\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/seolranlee/study/react-nodebird/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,QAAQ,GAAG,QAAwCL,OAAO,CAACD,eAAe,CAAC,EAAD,CAAhB,CAA/C,GAAuEC,OAAO,CAACD,eAAe,CAAC,EAAD,CAAhB,CAA/F;AACA,MAAMO,KAAK,GAAGL,WAAW,CAACE,OAAD,EAAUE,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAE,iBADO;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAAf;AAIA,SAAOH,KAAP;AACD,CARD;;AAUA,IAAMI,OAAO,GAAGZ,aAAa,CAACM,cAAD,EAAiB;AAC5CO,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["// configureStore.js\nimport { createWrapper } from 'next-redux-wrapper'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducer from '../reducers'\n\nconst configureStore = () => {\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware([])) : compose(applyMiddleware([]))\n  const store = createStore(reducer, enhancer)\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'seolseol_2'\n  })\n  return store\n}\n\nconst wrapper = createWrapper(configureStore, { \n  debug: process.env.NODE_ENV === 'development'\n})\n\nexport default wrapper"]},"metadata":{},"sourceType":"module"}