{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from './user';\nimport post from './post';\nconst initialState = {\n  // reducer를 쪼갠 기준: state(user.js, post.js)\n  user: {},\n  post: {}\n}; // (이전상태, 액션) => return 다음상태\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDATE:', HYDRATE);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n    // 최초 초기화 시점을 위한 코드\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/seolranlee/study/react-nodebird/front/reducers/index.js"],"names":["HYDRATE","user","post","initialState","rootReducer","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,YAAY,GAAG;AACnB;AACAF,EAAAA,IAAI,EAAE,EAFa;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB,C,CAQA;;AACA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAL;AACEQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,OAAvB;AACA,6CAAYK,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;AACF;;AACA;AACE,aAAOL,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\"\nimport user from './user'\nimport post from './post'\n\nconst initialState = {\n  // reducer를 쪼갠 기준: state(user.js, post.js)\n  user: {\n  },\n  post: {\n  }\n}\n\n// (이전상태, 액션) => return 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDATE:', HYDRATE)\n      return { ...state, ...action.payload }\n    // 최초 초기화 시점을 위한 코드\n    default:\n      return state\n  }\n}\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}