{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  logInLoading: false,\n  // 로그인 시도중  // 로딩창 UI구현을 위함\n  logInDone: false,\n  logInError: false,\n  logOutLoading: false,\n  // 로그아웃 시도중  // 로딩창 UI구현을 위함\n  logOutDone: false,\n  logOutError: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; // 변수는 에디터가 관리해주기 때문에 오타가 날 확률이 줄어든다.\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE'; // 그때 그때 액션을 만드는 action creater\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInError: null,\n        logInDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'seolranlee'\n        })\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInError: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInError: false,\n        logInDone: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInError: false,\n        logInDone: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/seolranlee/study/react-nodebird/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","nickname","error"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,YAAY,EAAE,KADY;AACL;AACrBC,EAAAA,SAAS,EAAE,KAFe;AAG1BC,EAAAA,UAAU,EAAE,KAHc;AAK1BC,EAAAA,aAAa,EAAE,KALW;AAKJ;AACtBC,EAAAA,UAAU,EAAE,KANc;AAO1BC,EAAAA,WAAW,EAAE,KAPa;AAQ1BC,EAAAA,EAAE,EAAE,IARsB;AAS1BC,EAAAA,UAAU,EAAE,EATc;AAU1BC,EAAAA,SAAS,EAAE;AAVe,CAArB,C,CAaP;;AACA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB,C,CAGP;;AACA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEd,cADD;AAELa,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;;AAMP,MAAME,OAAO,GAAG,CAACC,KAAK,GAAG3B,YAAT,EAAuB4B,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKd,cAAL;AACE,6CACKiB,KADL;AAEE1B,QAAAA,YAAY,EAAE,IAFhB;AAGEE,QAAAA,UAAU,EAAE,IAHd;AAIED,QAAAA,SAAS,EAAE;AAJb;;AAMF,SAAKS,cAAL;AACE,6CACKgB,KADL;AAEE1B,QAAAA,YAAY,EAAE,KAFhB;AAGEC,QAAAA,SAAS,EAAE,IAHb;AAIEK,QAAAA,EAAE,kCAAOqB,MAAM,CAACL,IAAd;AAAoBM,UAAAA,QAAQ,EAAE;AAA9B;AAJJ;;AAMF,SAAKjB,cAAL;AACE,6CACKe,KADL;AAEE1B,QAAAA,YAAY,EAAE,KAFhB;AAGEE,QAAAA,UAAU,EAAEyB,MAAM,CAACE;AAHrB;;AAKF,SAAKjB,eAAL;AACE,6CACKc,KADL;AAEExB,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAKW,eAAL;AACE,6CACKa,KADL;AAEExB,QAAAA,UAAU,EAAE,KAFd;AAGED,QAAAA,SAAS,EAAE,KAHb;AAIEK,QAAAA,EAAE,EAAE;AAJN;;AAMF,SAAKQ,eAAL;AACE,6CACKY,KADL;AAEExB,QAAAA,UAAU,EAAE,KAFd;AAGED,QAAAA,SAAS,EAAE;AAHb;;AAKF;AACE,aAAOyB,KAAP;AAxCJ;AA0CD,CA3CD;;AA6CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  logInLoading: false, // 로그인 시도중  // 로딩창 UI구현을 위함\n  logInDone: false,\n  logInError: false,\n\n  logOutLoading: false, // 로그아웃 시도중  // 로딩창 UI구현을 위함\n  logOutDone: false,\n  logOutError: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}\n\n// 변수는 에디터가 관리해주기 때문에 오타가 날 확률이 줄어든다.\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST'\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS'\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE'\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST'\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS'\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE'\n\n \n// 그때 그때 액션을 만드는 action creater\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  }\n}\n\nexport const logoutRequestAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return {\n        ...state,\n        logInLoading: true,\n        logInError: null,\n        logInDone: false\n      }\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        logInLoading: false,\n        logInDone: true,\n        me: { ...action.data, nickname: 'seolranlee' }\n      }\n    case LOG_IN_FAILURE:\n      return {\n        ...state,\n        logInLoading: false,\n        logInError: action.error\n      }\n    case LOG_OUT_REQUEST:\n      return {\n        ...state,\n        logInError: true,\n      }\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        logInError: false,\n        logInDone: false,\n        me: null\n      }\n    case LOG_OUT_FAILURE:\n      return {\n        ...state,\n        logInError: false,\n        logInDone: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}