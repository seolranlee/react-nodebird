{"ast":null,"code":"// configureStore.js\nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { ThunkMiddleware } from 'redux-thunk';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers'; // 3단 고차함수\n\nconst loggerMiddleware = ({\n  dispatch,\n  getstate\n}) => next => action => {\n  // action이 function인 경우에는 지연함수이기 때문에 그 액션을 나중에 실행해준다.\n  // if (typeof action === 'function') {\n  //   return action(dispatch, getState)\n  // }\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const middlewares = [ThunkMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/seolranlee/study/react-nodebird/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","ThunkMiddleware","thunkMiddleware","reducer","loggerMiddleware","dispatch","getstate","next","action","console","log","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,OAAP,MAAoB,aAApB,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6BC,IAAD,IAAWC,MAAD,IAAY;AACzE;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CARD;;AAUA,MAAMG,cAAc,GAAG,MAAM;AAC3B,QAAMC,WAAW,GAAG,CAACX,eAAD,EAAkBG,gBAAlB,CAApB;AACA,QAAMS,QAAQ,GAAG,QACbf,OAAO,CAACD,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CADM,GAEbZ,mBAAmB,CAACH,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CAFvB;AAGA,QAAME,KAAK,GAAGf,WAAW,CAACI,OAAD,EAAUU,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CAPD;;AASA,MAAMC,OAAO,GAAGnB,aAAa,CAACe,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["// configureStore.js\nimport { createWrapper } from 'next-redux-wrapper'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { ThunkMiddleware } from 'redux-thunk'\nimport thunkMiddleware from 'redux-thunk'\n\nimport reducer from '../reducers'\n\n// 3단 고차함수\nconst loggerMiddleware = ({ dispatch, getstate }) => (next) => (action) => {\n  // action이 function인 경우에는 지연함수이기 때문에 그 액션을 나중에 실행해준다.\n  // if (typeof action === 'function') {\n  //   return action(dispatch, getState)\n  // }\n\n  console.log(action)\n  return next(action)\n}\n\nconst configureStore = () => {\n  const middlewares = [ThunkMiddleware, loggerMiddleware]\n  const enhancer = process.env.NODE_ENV === 'production' \n    ? compose(applyMiddleware(...middlewares)) \n    : composeWithDevTools(applyMiddleware(...middlewares))\n  const store = createStore(reducer, enhancer)\n  return store\n}\n\nconst wrapper = createWrapper(configureStore, { \n  debug: process.env.NODE_ENV === 'development'\n})\n\nexport default wrapper"]},"metadata":{},"sourceType":"module"}